'''
–í –ª–∏—Ñ—Ç–µ –µ—Å—Ç—å 9 –∫–Ω–æ–ø–æ–∫, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —ç—Ç–∞–∂–∞–º, –∏ –∫–Ω–æ–ø–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –¥–≤–µ—Ä–µ–π.
–ù–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–∞–∂–¥—É—é –∫–Ω–æ–ø–∫—É —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ—Ç—Å—è –¥–≤–∏–∂–µ–Ω–∏–µ –ª–∏—Ñ—Ç–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —ç—Ç–∞–∂.
–î–≤–∏–∂–µ–Ω–∏–µ –æ—Ç —ç—Ç–∞–∂–∞ –∫ —ç—Ç–∞–∂—É –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –º–∏–Ω—É—Ç—ã (–≤ —É—Å–ª–æ–≤–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö –≤—Ä–µ–º–µ–Ω–∏).
–î–≤–µ—Ä–∏ –º–æ–≥—É—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–µ –º–æ–≥—É—Ç ‚Äì –≤–æ –≤—Ä–µ–º—è –¥–≤–∏–∂–µ–Ω–∏—è.
–ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ —ç—Ç–∞–∂–∞ —Å –æ—Ç–∫—Ä—ã—Ç—ã–º–∏ –¥–≤–µ—Ä—å–º–∏ –¥–≤–µ—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è.
–° –æ–¥–Ω–æ–≥–æ —ç—Ç–∞–∂–∞ –Ω–∞ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —ç—Ç–∞–∂ –ª–∏—Ñ—Ç –≤ –¥–≤–∏–∂–µ–Ω–∏–µ –Ω–µ –ø—Ä–∏–≤–æ–¥–∏—Ç—Å—è.
–°—á—ë—Ç—á–∏–∫ —ç—Ç–∞–∂–µ–π —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ.
–ù–∞—á–∞–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:  –ª–∏—Ñ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–º —ç—Ç–∞–∂–µ –¥–≤–µ—Ä–∏ –æ—Ç–∫—Ä—ã—Ç—ã.
'''
import asyncio
import time
import PySimpleGUI as sg
from threading import Thread

def asyncloop(loop):
    # Set loop as the active event loop for this thread
    asyncio.set_event_loop(loop)
    # We will get our tasks from the main thread so just run an empty loop
    loop.run_forever()

async def sleep(button_door, window, text_elem):
    global status_end_floor
    global status_floor
    global status_door
    status_door = False
    button_door.update(disabled=True)
    if status_end_floor > status_floor:
        step = 1
    else:
        step = -1
    while status_floor != status_end_floor:
        await asyncio.sleep(1.5)
        text_last = window[text[status_floor]]
        text_last.update(f'')
        status_floor+=step
        text_now = window[text[status_floor]]
        text_now.update(f'|üòÄ|')
        text_elem.update(f'–°–æ—Å—Ç–æ—è–Ω–∏–µ: –≠—Ç–∞–∂:{status_floor}, –î–≤–µ—Ä—å:{"–ó–∞–∫—Ä—ã—Ç–∞" if not status_door else "–û—Ç–∫—Ä—ã—Ç–∞"}')
    else:
        for i in fun:
            if i != 0:
                button = window[i]
                button.update(disabled=False)
        button_door.update(disabled=False)


loop = asyncio.new_event_loop()
# Create the new thread, giving loop as argument
t = Thread(target=asyncloop, args=(loop,))
# Start the thread
t.start()


status_floor = 1
status_door = True
layout = [
    [sg.Button('9',enable_events=True, key='-F9-', font='Helvetica 16'), sg.Text(f'', key='-text9-', font='Helvetica 16')],
    [sg.Button('8',enable_events=True, key='-F8-', font='Helvetica 16'), sg.Text(f'', key='-text8-', font='Helvetica 16')],
    [sg.Button('7',enable_events=True, key='-F7-', font='Helvetica 16'), sg.Text(f'', key='-text7-', font='Helvetica 16')],
    [sg.Button('6',enable_events=True, key='-F6-', font='Helvetica 16'), sg.Text(f'', key='-text6-', font='Helvetica 16')],
    [sg.Button('5',enable_events=True, key='-F5-', font='Helvetica 16'), sg.Text(f'', key='-text5-', font='Helvetica 16')],
    [sg.Button('4',enable_events=True, key='-F4-', font='Helvetica 16'), sg.Text(f'', key='-text4-', font='Helvetica 16')],
    [sg.Button('3',enable_events=True, key='-F3-', font='Helvetica 16'), sg.Text(f'', key='-text3-', font='Helvetica 16')],
    [sg.Button('2',enable_events=True, key='-F2-', font='Helvetica 16'), sg.Text(f'', key='-text2-', font='Helvetica 16')],
    [sg.Button('1',enable_events=True, key='-F1-', font='Helvetica 16'), sg.Text(f'üòÄ|', key='-text1-', font='Helvetica 16')],
    [sg.Button('–û—Ç–∫—Ä—ã—Ç—å / –∑–∞–∫—Ä—ã—Ç—å',enable_events=True, key='-FUNCTION1-', font='Helvetica 16')],
    [sg.Text(f'–°–æ—Å—Ç–æ—è–Ω–∏–µ: –≠—Ç–∞–∂:{status_floor}, –î–≤–µ—Ä—å:{"–ó–∞–∫—Ä—ã—Ç–∞" if not status_door else "–û—Ç–∫—Ä—ã—Ç–∞"}', key='-text-', font='Helvetica 16')],

]


sg.theme('LightBrown1')

window = sg.Window('–õ–∏—Ñ—Ç', layout, size=(400,550))
fun = [0]
text = [0]
for i in range(1, 10):
    fun.append(f'-F{i}-')
    text.append(f'-text{i}-')


while True:
    event, values = window.read()
    if event in (sg.WIN_CLOSED, 'Exit'):
        break
    elif event == '-FUNCTION1-':
        text_elem = window['-text-']
        if status_door == True:
            status_door = False
            text_now = window[text[status_floor]]
            text_now.update(f'|üòÄ|')
            text_elem.update(f'–°–æ—Å—Ç–æ—è–Ω–∏–µ: –≠—Ç–∞–∂:{status_floor}, –î–≤–µ—Ä—å:{"–ó–∞–∫—Ä—ã—Ç–∞" if not status_door else "–û—Ç–∫—Ä—ã—Ç–∞"}')
        else:
            status_door = True
            text_now = window[text[status_floor]]
            text_now.update(f'üòÄ|')
            text_elem.update(f'–°–æ—Å—Ç–æ—è–Ω–∏–µ: –≠—Ç–∞–∂:{status_floor}, –î–≤–µ—Ä—å:{"–ó–∞–∫—Ä—ã—Ç–∞" if not status_door else "–û—Ç–∫—Ä—ã—Ç–∞"}')
        text_elem.update(f'–°–æ—Å—Ç–æ—è–Ω–∏–µ: –≠—Ç–∞–∂:{status_floor}, –î–≤–µ—Ä—å:{"–ó–∞–∫—Ä—ã—Ç–∞" if not status_door else "–û—Ç–∫—Ä—ã—Ç–∞"}')
    elif event == '-F1-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 1:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 1
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)
    elif event == '-F2-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 2:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 2
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)
    elif event == '-F3-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 3:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 3
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)
    elif event == '-F4-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 4:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 4
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)
    elif event == '-F5-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 5:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 5
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)

    elif event == '-F6-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 6:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 6
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)

    elif event == '-F7-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 7:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 7
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)

    elif event == '-F8-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 8:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 8
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)

    elif event == '-F9-':
        button_door = window['-FUNCTION1-']
        text_elem = window['-text-']
        if status_floor != 9:
            status_door = False
            for i in fun:
                if i != 0:
                    button = window[i]
                    button.update(disabled=True)
            status_end_floor = 9
            asyncio.run_coroutine_threadsafe(sleep(button_door, window, text_elem), loop)


